{"version":3,"file":"static/js/154.ccce0686.chunk.js","mappings":"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","sources":["pages/Admin/AdminOrders.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport AdminMenu from \"./../../components/Layout/AdminMenu\";\nimport Layoutt from \"../../components/Layout/Layoutt\";\nimport axios from \"axios\";\nimport toast from \"react-hot-toast\";\n// import toast from \"react-hot-toast\";\nimport { useAuth } from \"../../context/auth\";\n// import moment from \"moment\";\nimport { Select } from \"antd\";\nconst { Option } = Select;\nconst AdminOrders = () => {\n  const [status, setStatus] = useState([\n    \"Not Processed\",\n    \"Processing\",\n    \"Shipped\",\n    \"Delivered\",\n    \"Cancel\",\n  ]);\n\n  // const [changeStatus, setChangeStatus] = useState(\"\");\n  /**UPDATION\n   * Already made delete order controller\n   * Just need to make button and with api call\n   * Need to delete the order\n   */\n  const handleDelete = async (orderId) => {\n    try {\n      const { data } = await axios.delete(\n        `${process.env.REACT_APP_API}/api/v1/auth/order/cancel/${orderId}`\n      );\n\n      if (data.success) {\n        // toast.success(data.message);\n        toast.success(`Product is deleted Successfully`);\n        getOrders();\n      } else {\n        toast.error(data.message);\n      }\n    } catch (error) {\n      console.log(error);\n      toast.error(\"Something went wrong while deleting the product\");\n    }\n  };\n\n  const [orders, setOrders] = useState([]);\n  const [auth, setAuth] = useAuth();\n  const getOrders = async () => {\n    try {\n      const { data } = await axios.get(\n        `${process.env.REACT_APP_API}/api/v1/auth/all-orders`\n      );\n      setOrders(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    if (auth?.token) getOrders();\n  }, [auth?.token]);\n\n  // changing status of order whether its processing , processed ....\n  const handleChange = async (orderId, value) => {\n    try {\n      const { data } = await axios.put(\n        `${process.env.REACT_APP_API}/api/v1/auth/order-status/${orderId}`,\n        { status: value }\n      );\n      getOrders();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  // time when the order buys\n  // Get the day, month, and year\n  const [day, setDay] = useState(null);\n  const [month, setMonth] = useState(null);\n  const [year, setYear] = useState(null);\n\n  useEffect(() => {\n    // Check if day, month, and year are stored in local storage\n    const storedDay = localStorage.getItem(\"day\");\n    const storedMonth = localStorage.getItem(\"month\");\n    const storedYear = localStorage.getItem(\"year\");\n\n    if (storedDay && storedMonth && storedYear) {\n      // Data already stored, retrieve and set the state\n      setDay(storedDay);\n      setMonth(storedMonth);\n      setYear(storedYear);\n    } else {\n      // Data not stored, get the current date\n      const currentDate = new Date();\n      const currentDay = currentDate.getDate();\n      const currentMonth = currentDate.getMonth() + 1; // Add 1 to get 1-12 months\n      const currentYear = currentDate.getFullYear();\n\n      // Store the current date in local storage\n      localStorage.setItem(\"day\", currentDay);\n      localStorage.setItem(\"month\", currentMonth);\n      localStorage.setItem(\"year\", currentYear);\n\n      // Set the state with the current date\n      setDay(currentDay);\n      setMonth(currentMonth);\n      setYear(currentYear);\n    }\n  }, []); // Empty dependency array ensures this effect runs once on component mount\n\n  return (\n    <Layoutt title=\"All Orders Data\">\n      <div className=\"container-fluid m-3 p-3\">\n        <div className=\"row\">\n          <div className=\"col-md-3\">\n            <AdminMenu />\n          </div>\n          <div className=\"col-md-8\">\n            <h1 className=\"text-center\">All Orders</h1>\n\n            <div className=\"border shadow\">\n              <table className=\"table\">\n                <thead></thead>\n              </table>\n            </div>\n\n            <div>\n              {/* <table className=\"table\">\n                <thead className=\"adminorderss\">\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\">Status</th>\n                    <th scope=\"col\">Buyer</th>\n                    <th scope=\"col\">Date</th>\n                    <th scope=\"col\">Payment</th>\n                    <th scope=\"col\">Quantity</th>\n                  </tr>\n                </thead>\n              </table> */}\n\n              <div>\n                {orders?.map((o, i) => {\n                  return (\n                    <div className=\"border shadow\">\n                      <table className=\"table\">\n                        <table className=\"table\">\n                          <thead className=\"adminorderss\">\n                            <tr>\n                              <th scope=\"col\">#</th>\n                              <th scope=\"col\">Status</th>\n                              <th scope=\"col\">Buyer</th>\n                              <th scope=\"col\">Date</th>\n                              <th scope=\"col\">Payment</th>\n                              <th scope=\"col\">Quantity</th>\n                            </tr>\n                          </thead>\n                        </table>\n                        <tbody className=\"adminorderss\">\n                          <tr>\n                            <td>{i + 1}</td>\n                            <td>\n                              <Select\n                                bordered={false}\n                                onChange={(value) => handleChange(o._id, value)}\n                                defaultValue={o?.status}\n                              >\n                                {status.map((s, i) => (\n                                  <Option key={i} value={s}>\n                                    {s}\n                                  </Option>\n                                ))}\n                              </Select>\n                            </td>\n                            <td>{o?.buyer?.name}</td>\n                            {/* <td>{moment(o?.createAt).fromNow()}</td> */}\n                            <td>\n                              {day}/{month}/{year}\n                            </td>\n                            <td>{o?.payment.success ? \"Success\" : \"Failed\"}</td>\n                            <td>{o?.products?.length}</td>\n                          </tr>\n\n                          {/* // button for delete  */}\n                          <button\n                            className=\"btn btn-danger ms-2 mt-2\"\n                            onClick={() => {\n                              handleDelete(o._id);\n                            }}\n                          >\n                            Delete\n                          </button>\n                        </tbody>\n                      </table>\n                      <div className=\"container\">\n                        {o?.products.map((p, i) => (\n                          <div className=\"row mb-2 p-3 card flex-row\">\n                            <div className=\"col-md-4\">\n                              <img\n                                src={`${process.env.REACT_APP_API}/api/v1/product/product-photo/${p._id}`}\n                                className=\"card-img-top\"\n                                alt={p.name}\n                                height={\"150px\"}\n                              />\n                            </div>\n                            <div className=\"col-md-8\">\n                              <p>\n                                <b>{p.name}</b>\n                              </p>\n                              <p>{p.description}</p>\n                              <p>Price: {p.price}</p>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </Layoutt>\n  );\n};\n\nexport default AdminOrders;\n"],"names":["Option","Select","_useState","useState","_useState2","_slicedToArray","status","handleDelete","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","orderId","_yield$axios$delete","data","wrap","_context","prev","next","axios","concat","process","sent","success","toast","getOrders","message","t0","console","log","stop","_x","apply","arguments","_useState3","_useState4","orders","setOrders","_useAuth","useAuth","_useAuth2","auth","_ref2","_callee2","_yield$axios$get","_context2","useEffect","token","handleChange","_ref3","_callee3","value","_yield$axios$put","_context3","_x2","_x3","_useState5","_useState6","day","setDay","_useState7","_useState8","month","setMonth","_useState9","_useState10","year","setYear","storedDay","localStorage","getItem","storedMonth","storedYear","currentDate","Date","currentDay","getDate","currentMonth","getMonth","currentYear","getFullYear","setItem","_jsx","Layoutt","title","children","className","_jsxs","AdminMenu","map","o","i","_o$buyer","_o$products","scope","bordered","onChange","_id","defaultValue","s","buyer","name","payment","products","length","onClick","p","src","alt","height","description","price"],"sourceRoot":""}